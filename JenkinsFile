pipeline {
    agent any

    environment {
        // Define the Maven tool installation name
        MAVEN_HOME = tool name: 'Maven', type: 'maven'
        // Credential ID for ReportPortal token
        RP_CREDS = 'rpCreds'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/atulsharmacsk/CucumberReportPortal'
            }
        }

        stage('setting up reportportal') {
            steps{
                script {
                    withCredentials([string(credentialsId: env.RP_CREDS, variable: 'token')]){
                            def content = """
                                rp.api.key = ${token}
                                rp.launch = JENKINS_DEMO_${JOB_BASE_NAME}
                                rp.description = ${JOB_URL}${BUILD_NUMBER}
                            """.stripIndent()
                            def filePath = "${WORKSPACE}/src/test/resources/reportportal.properties"
                            def existingContent = readFile(filePath).trim()
                            writeFile file: filePath, text: existingContent+"\n"+content, append:true

                            // Print content of the updated file
                            echo "Updated content of ${filePath}:"
                            echo readFile(filePath)
                    }
                }
            }
        }

        stage('Build') {
            steps {
                // Run Maven commands based on the detected OS
                script {
                    try {
                        bat "\"${MAVEN_HOME}\\bin\\mvn\" clean test"
                    }
                    catch(Exception e) {
                        echo "Build stage failed with error: ${e}"
                        currentBuild.result = 'FAILURE'
                    } 
                }
            }
        }

         stage('rerun failed cases') {
            when {
                expression { currentBuild.result == 'FAILURE' }
            }
             steps {
                 // Run Maven commands based on the detected OS
                 script {
                  def content = "rp.rerun = true"
                  def filePath = "${WORKSPACE}/src/test/resources/reportportal.properties"
                  def existingContent = readFile(filePath).trim()
                  writeFile file: filePath, text: existingContent+"\n"+content, append:true
                 // Print content of the updated file
                  echo "Updated content of ${filePath}:"
                  echo readFile(filePath)

                  bat "\"${MAVEN_HOME}\\bin\\mvn\" exec:java@rerun-failed-tests -DpassTest=1"
                 }
             }
         }

    }
}
